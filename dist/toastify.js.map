{
  "version": 3,
  "sources": ["../src/toastify.ts"],
  "sourcesContent": ["export type Gravity = 'top' | 'bottom';\r\nexport type Position = 'left' | 'center' | 'right';\r\nexport type CloseReason = 'timeout' | 'close-button' | 'other';\r\ntype DebounceOptions = {\r\n    immediate?: boolean\r\n}\r\nconst isNull = (obj: unknown): obj is null => obj === null;\r\nconst isUndefined = (obj: unknown): obj is undefined => typeof obj === 'undefined';\r\nconst isNullOrUndefined = (obj: unknown): obj is null | undefined => isUndefined(obj) || isNull(obj);\r\nconst activeToasts = new Set<Toast>();\r\nconst toastTimeouts = new Map<Toast, number>();\r\nconst toastIntervals = new Map<Toast, number>();\r\nconst toastContainers = new Map<string, HTMLElement>();\r\nfunction debounce<T extends (...args: any[]) => any>(\r\n    fn: T,\r\n    delay: number,\r\n    { immediate = false }: DebounceOptions = {}\r\n) {\r\n    let timer: ReturnType<typeof setTimeout> | null = null\r\n    const debounced = function (this: any, ...args: Parameters<T>) {\r\n        const callNow = immediate && !timer\r\n        if (timer) {\r\n            clearTimeout(timer)\r\n        }\r\n        timer = setTimeout(() => {\r\n            timer = null\r\n            if (!immediate) {\r\n                fn.apply(this, args)\r\n            }\r\n        }, delay)\r\n        if (callNow) {\r\n            fn.apply(this, args)\r\n        }\r\n    } as T & { cancel: () => void }\r\n    debounced.cancel = () => {\r\n        if (timer) {\r\n            clearTimeout(timer)\r\n            timer = null\r\n        }\r\n    }\r\n    return debounced\r\n}\r\nconst getContainer = (gravity: Gravity, position: Position): HTMLElement => {\r\n    const containerId = `toast-container-${gravity}-${position}`;\r\n    if (!toastContainers.has(containerId)) {\r\n        const container = document.createElement('div');\r\n        container.id = containerId;\r\n        container.classList.add(\r\n            'toast-container',\r\n            `toast-${gravity}`,\r\n            `toast-${position}`\r\n        );\r\n        document.body.appendChild(container);\r\n        toastContainers.set(containerId, container);\r\n    }\r\n    return toastContainers.get(containerId)!;\r\n};\r\nconst addTimeout = (toast: Toast, callback: () => void): void => {\r\n    if (isNullOrUndefined(toast.progress)) return;\r\n    if (isNullOrUndefined(toast.options.duration)) return;\r\n    delTimeout(toast);\r\n    const startTime = Date.now();\r\n    const duration = toast.options.duration;\r\n    const updateRemainingTime = () => {\r\n        if (isNullOrUndefined(toast.progress)) return;\r\n        const elapsed = Date.now() - startTime;\r\n        const remaining = Math.max(0, duration - elapsed);\r\n        toast.progress.style.setProperty('--toast-progress', `${remaining / duration}`);\r\n    };\r\n    toast.progress.style.setProperty('--toast-progress', `1`);\r\n    const intervalId = window.setInterval(updateRemainingTime, 50);\r\n    const timeoutId = window.setTimeout(() => {\r\n        if (isNullOrUndefined(toast.progress)) return;\r\n        toast.progress.style.setProperty('--toast-progress', `0`);\r\n        callback();\r\n        delTimeout(toast);\r\n    }, duration);\r\n    toastTimeouts.set(toast, timeoutId);\r\n    toastIntervals.set(toast, intervalId);\r\n};\r\nconst delTimeout = (toast: Toast): void => {\r\n    const timeoutId = toastTimeouts.get(toast);\r\n    const intervalId = toastIntervals.get(toast);\r\n\r\n    if (!isNullOrUndefined(timeoutId)) {\r\n        clearTimeout(timeoutId);\r\n        toastTimeouts.delete(toast);\r\n    }\r\n    if (!isNullOrUndefined(intervalId)) {\r\n        clearInterval(intervalId);\r\n        toastIntervals.delete(toast);\r\n    }\r\n    if (!isNullOrUndefined(toast.progress)){\r\n        toast.progress.style.setProperty('--toast-progress', `0`);\r\n    }\r\n};\r\nconst offscreenContainer = document.createElement('div');\r\noffscreenContainer.classList.add('offscreen-container');\r\ndocument.body.appendChild(offscreenContainer);\r\n\r\nwindow.addEventListener('resize', debounce(() => {\r\n    for (const toast of activeToasts) {\r\n        toast.setToastRect();\r\n    }\r\n}, 100));\r\nexport interface ToastOptions {\r\n    root?: Element;\r\n    text?: string;\r\n    node?: Node;\r\n    duration?: number;\r\n    close?: boolean;\r\n    gravity?: Gravity;\r\n    position?: Position;\r\n    className?: string | string[];\r\n    stopOnFocus?: boolean;\r\n    onClose?: (this: Toast, e: CustomEvent<{ reason: CloseReason }>) => void;\r\n    onClick?: (this: Toast, e: MouseEvent) => void;\r\n    style?: Partial<CSSStyleDeclaration>;\r\n    oldestFirst?: boolean;\r\n}\r\ninterface Options {\r\n    gravity: Gravity;\r\n    position: Position;\r\n    stopOnFocus: boolean;\r\n    oldestFirst: boolean;\r\n    text?: string;\r\n    node?: Node;\r\n    duration?: number;\r\n    close?: boolean;\r\n    className?: string | string[];\r\n    onClose?: (this: Toast, e: CustomEvent<{ reason: CloseReason }>) => void;\r\n    onClick?: (this: Toast, e: MouseEvent) => void;\r\n    style?: Partial<CSSStyleDeclaration>;\r\n}\r\n/**\r\n * Toast\r\n * @example\r\n * new Toast({ text: 'Hello World' }).show();\r\n */\r\nexport class Toast {\r\n    private static readonly defaults: Options = {\r\n        gravity: 'top',\r\n        position: 'right',\r\n        stopOnFocus: true,\r\n        oldestFirst: true,\r\n    };\r\n    public options: Options;\r\n    public root: Element;\r\n    public element: HTMLElement;\r\n\r\n    public gravity: Gravity;\r\n    public position: Position;\r\n    public oldestFirst: boolean;\r\n    public stopOnFocus: boolean;\r\n    public content?: HTMLDivElement;\r\n    public progress?: HTMLDivElement;\r\n\r\n    private mouseOverHandler?: () => void;\r\n    private mouseLeaveHandler?: () => void;\r\n    private closeButtonHandler?: () => void;\r\n    private animationEndHandler?: (e: AnimationEvent) => void;\r\n    private clickHandler?: (e: MouseEvent) => void;\r\n\r\n    private closeButton?: HTMLSpanElement;\r\n\r\n    /**\r\n     * Create a Toastify instance\r\n     * @param options User configuration options\r\n     */\r\n    constructor(options: ToastOptions) {\r\n        this.options = {\r\n            ...Toast.defaults,\r\n            ...options\r\n        };\r\n\r\n        this.root = getContainer(this.options.gravity, this.options.position);\r\n        this.gravity = this.options.gravity;\r\n        this.position = this.options.position;\r\n        this.stopOnFocus = this.options.stopOnFocus;\r\n        this.oldestFirst = this.options.oldestFirst;\r\n\r\n        this.element = document.createElement('div');\r\n        this.applyBaseStyles()\r\n            .addCloseButton()\r\n            .createContent()\r\n            .ensureCloseMethod()\r\n            .bindEvents();\r\n\r\n        activeToasts.add(this);\r\n    }\r\n\r\n    private applyBaseStyles(): this {\r\n        this.element.classList.add('toast');\r\n        if (this.options.className) {\r\n            const classes = Array.isArray(this.options.className)\r\n                ? this.options.className\r\n                : [this.options.className];\r\n            classes.forEach(cls => this.element.classList.add(cls));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    private createContent(): this {\r\n        this.content = document.createElement('div');\r\n        this.content.classList.add('toast-content');\r\n\r\n        if (this.options.text) {\r\n            this.content.textContent = this.options.text;\r\n        }\r\n        if (this.options.node) {\r\n            this.content.appendChild(this.options.node);\r\n        }\r\n        if (this.options.style) {\r\n            this.applyStyles(this.content, this.options.style);\r\n        }\r\n        if (!isNullOrUndefined(this.options.duration) && this.options.duration > 0) {\r\n            this.progress = document.createElement('div');\r\n            this.progress.classList.add('toast-progress');\r\n            this.content.appendChild(this.progress);\r\n        }\r\n\r\n        this.element.appendChild(this.content);\r\n        return this;\r\n    }\r\n\r\n    private addCloseButton(): this {\r\n        if (this.options.close) {\r\n            this.closeButton = document.createElement('span');\r\n            this.closeButton.className = 'toast-close';\r\n            this.closeButton.textContent = 'ðŸ—™';\r\n            this.closeButtonHandler = () => this.hide('close-button');\r\n            this.closeButton.addEventListener('click', this.closeButtonHandler);\r\n            this.element.appendChild(this.closeButton);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public setToastRect(): this {\r\n        // fix max-height cannot be automatically animated\r\n        if (!this.element.classList.contains('show')) offscreenContainer.appendChild(this.element);\r\n        this.element.style.removeProperty('--toast-height');\r\n        this.element.style.removeProperty('--toast-width');\r\n        this.element.style.setProperty('max-height', 'none', 'important');\r\n        this.element.style.setProperty('max-width', 'none', 'important');\r\n        if (this.position == 'center') this.element.style.setProperty('max-width', `${this.root.getBoundingClientRect().width}px`, 'important');\r\n        const { height, width } = this.element.getBoundingClientRect();\r\n        this.element.style.setProperty('--toast-height', `${height}px`);\r\n        this.element.style.setProperty('--toast-width', `${width}px`);\r\n        this.element.style.removeProperty('max-height');\r\n        this.element.style.removeProperty('max-width');\r\n        if (!this.element.classList.contains('show')) offscreenContainer.removeChild(this.element);\r\n        return this;\r\n    }\r\n    private ensureCloseMethod(): this {\r\n        if (isNullOrUndefined(this.options.duration) && isNullOrUndefined(this.options.close) && isNullOrUndefined(this.options.onClick)) {\r\n            this.options.onClick = () => this.hide('other');\r\n        }\r\n        return this;\r\n    }\r\n\r\n    private bindEvents(): this {\r\n        if (this.stopOnFocus && !isNullOrUndefined(this.options.duration) && this.options.duration > 0) {\r\n            this.mouseOverHandler = () => delTimeout(this);\r\n            this.mouseLeaveHandler = () => addTimeout(this, () => this.hide('timeout'));\r\n            this.element.addEventListener('mouseover', this.mouseOverHandler);\r\n            this.element.addEventListener('mouseleave', this.mouseLeaveHandler);\r\n        }\r\n        if (!isNullOrUndefined(this.options.onClick)) {\r\n            this.clickHandler = this.options.onClick.bind(this);\r\n            this.element.addEventListener('click', this.clickHandler);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    private applyStyles(element: HTMLElement, styles: Partial<CSSStyleDeclaration>) {\r\n        function camelToKebab(str: string): string {\r\n            return str.replace(/([A-Z])/g, '-$1').toLowerCase();\r\n        }\r\n        for (const key in styles) {\r\n            const value = styles[key];\r\n            const property = camelToKebab(key);\r\n            if (isNullOrUndefined(value)) {\r\n                element.style.removeProperty(property);\r\n                continue;\r\n            }\r\n            const important = value.includes('!important');\r\n            const cleanValue = value.replace(/\\s*!important\\s*/, '').trim();\r\n            element.style.setProperty(property, cleanValue, important ? 'important' : '');\r\n        }\r\n    }\r\n\r\n    private toggleAnimationState(animation: boolean): this {\r\n        if (!this.element.classList.replace(animation ? 'hide' : 'show', animation ? 'show' : 'hide')) {\r\n            this.element.classList.add(animation ? 'show' : 'hide');\r\n        }\r\n        return this;\r\n    }\r\n\r\n    private insertToastElement(): this {\r\n        if (this.oldestFirst) {\r\n            this.root.insertBefore(this.element, this.root.firstChild);\r\n        } else {\r\n            if (this.root.lastChild) {\r\n                this.root.insertBefore(this.element, this.root.lastChild.nextSibling);\r\n            } else {\r\n                this.root.appendChild(this.element);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    private setupAutoHide(): this {\r\n        if (!isNullOrUndefined(this.options.duration) && this.options.duration > 0) {\r\n            addTimeout(this, () => this.hide('timeout'));\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Display the Toast notification\r\n     * @returns this Instance for method chaining\r\n     */\r\n    public show(): this {\r\n        this.setToastRect()\r\n            .insertToastElement()\r\n            .toggleAnimationState(true)\r\n            .setupAutoHide();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @deprecated This function is deprecated. Use the show() instead.\r\n     */\r\n    public showToast() {\r\n        return this.show();\r\n    }\r\n\r\n    private removeEventListeners(): this {\r\n        if (this.mouseOverHandler) {\r\n            this.element.removeEventListener('mouseover', this.mouseOverHandler);\r\n        }\r\n        if (this.mouseLeaveHandler) {\r\n            this.element.removeEventListener('mouseleave', this.mouseLeaveHandler);\r\n        }\r\n        if (this.clickHandler) {\r\n            this.element.removeEventListener('click', this.clickHandler);\r\n        }\r\n        if (this.options.close && this.closeButton && this.closeButtonHandler) {\r\n            this.closeButton.removeEventListener('click', this.closeButtonHandler);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Hide the current Toast with optional close reason\r\n     * @param reason The reason for closing (default: 'other')\r\n     * Triggers a CSS exit animation and removes the element after the animation completes\r\n     */\r\n    public hide(reason: CloseReason = 'other'): void {\r\n        if (!this.element) return;\r\n        delTimeout(this);\r\n        activeToasts.delete(this);\r\n        this.animationEndHandler = (e: AnimationEvent) => {\r\n            if (e.animationName.startsWith('toast-out')) {\r\n                this.element.removeEventListener('animationend', this.animationEndHandler!);\r\n                this.element.remove();\r\n                this.options.onClose?.call(this, new CustomEvent('toast-close', {\r\n                    detail: { reason }\r\n                }));\r\n            }\r\n        };\r\n        this.element.addEventListener('animationend', this.animationEndHandler);\r\n        this.removeEventListeners()\r\n            .toggleAnimationState(false);\r\n    }\r\n\r\n    /**\r\n     * @deprecated This function is deprecated. Use the hide() instead.\r\n     */\r\n    public hideToast(): void {\r\n        this.hide('other');\r\n    }\r\n}\r\n\r\nfunction createToast(options: ToastOptions): Toast {\r\n    return new Toast(options);\r\n}\r\n\r\ndeclare global {\r\n    function Toast(options: ToastOptions): Toast;\r\n    /**\r\n     * @deprecated This function is deprecated. Use the Toast() instead.\r\n     */\r\n    function Toastify(options: ToastOptions): Toast;\r\n}\r\n\r\nglobalThis.Toast = createToast;\r\nglobalThis.Toastify = createToast;\r\n"],
  "mappings": "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",
  "names": []
}
