{
  "version": 3,
  "sources": ["../src/toastify.ts"],
  "sourcesContent": ["export type Gravity = 'top' | 'bottom';\r\nexport type Position = 'left' | 'center' | 'right';\r\nexport type CloseReason = 'timeout' | 'close-button' | 'other';\r\ntype DebounceOptions = {\r\n    immediate?: boolean\r\n}\r\nconst isNull = (obj: unknown): obj is null => obj === null;\r\nconst isUndefined = (obj: unknown): obj is undefined => typeof obj === 'undefined';\r\nconst isNullOrUndefined = (obj: unknown): obj is null | undefined => isUndefined(obj) || isNull(obj);\r\nconst activeToasts = new Set<Toast>();\r\nconst toastTimeouts = new Map<Toast, number>();\r\nconst toastIntervals = new Map<Toast, number>();\r\nconst toastContainers = new Map<string, HTMLElement>();\r\nfunction debounce<T extends (...args: any[]) => any>(\r\n    fn: T,\r\n    delay: number,\r\n    { immediate = false }: DebounceOptions = {}\r\n) {\r\n    let timer: ReturnType<typeof setTimeout> | null = null\r\n    const debounced = function (this: any, ...args: Parameters<T>) {\r\n        const callNow = immediate && !timer\r\n        if (timer) {\r\n            clearTimeout(timer)\r\n        }\r\n        timer = setTimeout(() => {\r\n            timer = null\r\n            if (!immediate) {\r\n                fn.apply(this, args)\r\n            }\r\n        }, delay)\r\n        if (callNow) {\r\n            fn.apply(this, args)\r\n        }\r\n    } as T & { cancel: () => void }\r\n    debounced.cancel = () => {\r\n        if (timer) {\r\n            clearTimeout(timer)\r\n            timer = null\r\n        }\r\n    }\r\n    return debounced\r\n}\r\nconst getContainer = (gravity: Gravity, position: Position): HTMLElement => {\r\n    const containerId = `toast-container-${gravity}-${position}`;\r\n    if (!toastContainers.has(containerId)) {\r\n        const container = document.createElement('div');\r\n        container.id = containerId;\r\n        container.classList.add(\r\n            'toast-container',\r\n            `toast-${gravity}`,\r\n            `toast-${position}`\r\n        );\r\n        document.body.appendChild(container);\r\n        toastContainers.set(containerId, container);\r\n    }\r\n    return toastContainers.get(containerId)!;\r\n};\r\nconst addTimeout = (toast: Toast, callback: () => void): void => {\r\n    if (isNullOrUndefined(toast.progress)) return;\r\n    if (isNullOrUndefined(toast.options.duration)) return;\r\n    delTimeout(toast);\r\n    const startTime = Date.now();\r\n    const duration = toast.options.duration;\r\n    const updateRemainingTime = () => {\r\n        if (isNullOrUndefined(toast.progress)) return;\r\n        const elapsed = Date.now() - startTime;\r\n        const remaining = Math.max(0, duration - elapsed);\r\n        toast.progress.style.setProperty('--toast-progress', `${remaining / duration}`);\r\n    };\r\n    toast.progress.style.setProperty('--toast-progress', `1`);\r\n    const intervalId = window.setInterval(updateRemainingTime, 50);\r\n    const timeoutId = window.setTimeout(() => {\r\n        if (isNullOrUndefined(toast.progress)) return;\r\n        toast.progress.style.setProperty('--toast-progress', `0`);\r\n        callback();\r\n        delTimeout(toast);\r\n    }, duration);\r\n    toastTimeouts.set(toast, timeoutId);\r\n    toastIntervals.set(toast, intervalId);\r\n};\r\nconst delTimeout = (toast: Toast): void => {\r\n    const timeoutId = toastTimeouts.get(toast);\r\n    const intervalId = toastIntervals.get(toast);\r\n\r\n    if (!isNullOrUndefined(timeoutId)) {\r\n        clearTimeout(timeoutId);\r\n        toastTimeouts.delete(toast);\r\n    }\r\n    if (!isNullOrUndefined(intervalId)) {\r\n        clearInterval(intervalId);\r\n        toastIntervals.delete(toast);\r\n    }\r\n    if (!isNullOrUndefined(toast.progress)){\r\n        toast.progress.style.setProperty('--toast-progress', `0`);\r\n    }\r\n};\r\nconst offscreenContainer = document.createElement('div');\r\noffscreenContainer.classList.add('offscreen-container');\r\ndocument.body.appendChild(offscreenContainer);\r\n\r\nwindow.addEventListener('resize', debounce(() => {\r\n    for (const toast of activeToasts) {\r\n        toast.setToastRect();\r\n    }\r\n}, 100));\r\nexport interface ToastOptions {\r\n    root?: Element;\r\n    text?: string;\r\n    node?: Node;\r\n    duration?: number;\r\n    close?: boolean;\r\n    gravity?: Gravity;\r\n    position?: Position;\r\n    className?: string | string[];\r\n    stopOnFocus?: boolean;\r\n    onClose?: (this: Toast, e: CustomEvent<{ reason: CloseReason }>) => void;\r\n    onClick?: (this: Toast, e: MouseEvent) => void;\r\n    style?: Partial<CSSStyleDeclaration>;\r\n    oldestFirst?: boolean;\r\n}\r\ninterface Options {\r\n    gravity: Gravity;\r\n    position: Position;\r\n    stopOnFocus: boolean;\r\n    oldestFirst: boolean;\r\n    text?: string;\r\n    node?: Node;\r\n    duration?: number;\r\n    close?: boolean;\r\n    className?: string | string[];\r\n    onClose?: (this: Toast, e: CustomEvent<{ reason: CloseReason }>) => void;\r\n    onClick?: (this: Toast, e: MouseEvent) => void;\r\n    style?: Partial<CSSStyleDeclaration>;\r\n}\r\n/**\r\n * Toast\r\n * @example\r\n * new Toast({ text: 'Hello World' }).show();\r\n */\r\nexport class Toast {\r\n    private static readonly defaults: Options = {\r\n        gravity: 'top',\r\n        position: 'right',\r\n        stopOnFocus: true,\r\n        oldestFirst: true,\r\n    };\r\n    public options: Options;\r\n    public root: Element;\r\n    public element: HTMLElement;\r\n\r\n    public gravity: Gravity;\r\n    public position: Position;\r\n    public oldestFirst: boolean;\r\n    public stopOnFocus: boolean;\r\n    public content?: HTMLDivElement;\r\n    public progress?: HTMLDivElement;\r\n\r\n    private mouseOverHandler?: () => void;\r\n    private mouseLeaveHandler?: () => void;\r\n    private closeButtonHandler?: () => void;\r\n    private animationEndHandler?: (e: AnimationEvent) => void;\r\n    private clickHandler?: (e: MouseEvent) => void;\r\n\r\n    private closeButton?: HTMLSpanElement;\r\n\r\n    /**\r\n     * Create a Toastify instance\r\n     * @param options User configuration options\r\n     */\r\n    constructor(options: ToastOptions) {\r\n        this.options = {\r\n            ...Toast.defaults,\r\n            ...options\r\n        };\r\n\r\n        this.root = getContainer(this.options.gravity, this.options.position);\r\n        this.gravity = this.options.gravity;\r\n        this.position = this.options.position;\r\n        this.stopOnFocus = this.options.stopOnFocus;\r\n        this.oldestFirst = this.options.oldestFirst;\r\n\r\n        this.element = document.createElement('div');\r\n        this.applyBaseStyles()\r\n            .addCloseButton()\r\n            .createContent()\r\n            .ensureCloseMethod()\r\n            .bindEvents();\r\n\r\n        activeToasts.add(this);\r\n    }\r\n\r\n    private applyBaseStyles(): this {\r\n        this.element.classList.add('toast');\r\n        if (this.options.className) {\r\n            const classes = Array.isArray(this.options.className)\r\n                ? this.options.className\r\n                : [this.options.className];\r\n            classes.forEach(cls => this.element.classList.add(cls));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    private createContent(): this {\r\n        this.content = document.createElement('div');\r\n        this.content.classList.add('toast-content');\r\n\r\n        if (this.options.text) {\r\n            this.content.textContent = this.options.text;\r\n        }\r\n        if (this.options.node) {\r\n            this.content.appendChild(this.options.node);\r\n        }\r\n        if (this.options.style) {\r\n            this.applyStyles(this.content, this.options.style);\r\n        }\r\n        if (!isNullOrUndefined(this.options.duration) && this.options.duration > 0) {\r\n            this.progress = document.createElement('div');\r\n            this.progress.classList.add('toast-progress');\r\n            this.content.appendChild(this.progress);\r\n        }\r\n\r\n        this.element.appendChild(this.content);\r\n        return this;\r\n    }\r\n\r\n    private addCloseButton(): this {\r\n        if (this.options.close) {\r\n            this.closeButton = document.createElement('span');\r\n            this.closeButton.className = 'toast-close';\r\n            this.closeButton.textContent = 'ðŸ—™';\r\n            this.closeButtonHandler = () => this.hide('close-button');\r\n            this.closeButton.addEventListener('click', this.closeButtonHandler);\r\n            this.element.appendChild(this.closeButton);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public setToastRect(): this {\r\n        // fix max-height cannot be automatically animated\r\n        if (!this.element.classList.contains('show')) offscreenContainer.appendChild(this.element);\r\n        this.element.style.removeProperty('--toast-height');\r\n        this.element.style.removeProperty('--toast-width');\r\n        this.element.style.setProperty('max-height', 'none', 'important');\r\n        this.element.style.setProperty('max-width', 'none', 'important');\r\n        if (this.position == 'center') this.element.style.setProperty('max-width', `${this.root.getBoundingClientRect().width}px`, 'important');\r\n        const { height, width } = this.element.getBoundingClientRect();\r\n        this.element.style.setProperty('--toast-height', `${height}px`);\r\n        this.element.style.setProperty('--toast-width', `${width}px`);\r\n        this.element.style.removeProperty('max-height');\r\n        this.element.style.removeProperty('max-width');\r\n        if (!this.element.classList.contains('show')) offscreenContainer.removeChild(this.element);\r\n        return this;\r\n    }\r\n    private ensureCloseMethod(): this {\r\n        if (isNullOrUndefined(this.options.duration) && isNullOrUndefined(this.options.close) && isNullOrUndefined(this.options.onClick)) {\r\n            this.options.onClick = () => this.hide('other');\r\n        }\r\n        return this;\r\n    }\r\n\r\n    private bindEvents(): this {\r\n        if (this.stopOnFocus && !isNullOrUndefined(this.options.duration) && this.options.duration > 0) {\r\n            this.mouseOverHandler = () => delTimeout(this);\r\n            this.mouseLeaveHandler = () => addTimeout(this, () => this.hide('timeout'));\r\n            this.element.addEventListener('mouseover', this.mouseOverHandler);\r\n            this.element.addEventListener('mouseleave', this.mouseLeaveHandler);\r\n        }\r\n        if (!isNullOrUndefined(this.options.onClick)) {\r\n            this.clickHandler = this.options.onClick.bind(this);\r\n            this.element.addEventListener('click', this.clickHandler);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    private applyStyles(element: HTMLElement, styles: Partial<CSSStyleDeclaration>) {\r\n        function camelToKebab(str: string): string {\r\n            return str.replace(/([A-Z])/g, '-$1').toLowerCase();\r\n        }\r\n        for (const key in styles) {\r\n            const value = styles[key];\r\n            const property = camelToKebab(key);\r\n            if (isNullOrUndefined(value)) {\r\n                element.style.removeProperty(property);\r\n                continue;\r\n            }\r\n            const important = value.includes('!important');\r\n            const cleanValue = value.replace(/\\s*!important\\s*/, '').trim();\r\n            element.style.setProperty(property, cleanValue, important ? 'important' : '');\r\n        }\r\n    }\r\n\r\n    private toggleAnimationState(animation: boolean): this {\r\n        if (!this.element.classList.replace(animation ? 'hide' : 'show', animation ? 'show' : 'hide')) {\r\n            this.element.classList.add(animation ? 'show' : 'hide');\r\n        }\r\n        return this;\r\n    }\r\n\r\n    private insertToastElement(): this {\r\n        if (this.oldestFirst) {\r\n            this.root.insertBefore(this.element, this.root.firstChild);\r\n        } else {\r\n            if (this.root.lastChild) {\r\n                this.root.insertBefore(this.element, this.root.lastChild.nextSibling);\r\n            } else {\r\n                this.root.appendChild(this.element);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    private setupAutoHide(): this {\r\n        if (!isNullOrUndefined(this.options.duration) && this.options.duration > 0) {\r\n            addTimeout(this, () => this.hide('timeout'));\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Display the Toast notification\r\n     * @returns this Instance for method chaining\r\n     */\r\n    public show(): this {\r\n        this.setToastRect()\r\n            .insertToastElement()\r\n            .toggleAnimationState(true)\r\n            .setupAutoHide();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @deprecated This function is deprecated. Use the show() instead.\r\n     */\r\n    public showToast() {\r\n        return this.show();\r\n    }\r\n\r\n    private removeEventListeners(): this {\r\n        if (this.mouseOverHandler) {\r\n            this.element.removeEventListener('mouseover', this.mouseOverHandler);\r\n        }\r\n        if (this.mouseLeaveHandler) {\r\n            this.element.removeEventListener('mouseleave', this.mouseLeaveHandler);\r\n        }\r\n        if (this.clickHandler) {\r\n            this.element.removeEventListener('click', this.clickHandler);\r\n        }\r\n        if (this.options.close && this.closeButton && this.closeButtonHandler) {\r\n            this.closeButton.removeEventListener('click', this.closeButtonHandler);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Hide the current Toast with optional close reason\r\n     * @param reason The reason for closing (default: 'other')\r\n     * Triggers a CSS exit animation and removes the element after the animation completes\r\n     */\r\n    public hide(reason: CloseReason = 'other'): void {\r\n        if (!this.element) return;\r\n        delTimeout(this);\r\n        activeToasts.delete(this);\r\n        this.animationEndHandler = (e: AnimationEvent) => {\r\n            if (e.animationName.startsWith('toast-out')) {\r\n                this.element.removeEventListener('animationend', this.animationEndHandler!);\r\n                this.element.remove();\r\n                this.options.onClose?.call(this, new CustomEvent('toast-close', {\r\n                    detail: { reason }\r\n                }));\r\n            }\r\n        };\r\n        this.element.addEventListener('animationend', this.animationEndHandler);\r\n        this.removeEventListeners()\r\n            .toggleAnimationState(false);\r\n    }\r\n\r\n    /**\r\n     * @deprecated This function is deprecated. Use the hide() instead.\r\n     */\r\n    public hideToast(): void {\r\n        this.hide('other');\r\n    }\r\n}\r\n\r\nfunction createToast(options: ToastOptions): Toast {\r\n    return new Toast(options);\r\n}\r\n\r\ndeclare global {\r\n    function Toast(options: ToastOptions): Toast;\r\n    /**\r\n     * @deprecated This function is deprecated. Use the Toast() instead.\r\n     */\r\n    function Toastify(options: ToastOptions): Toast;\r\n}\r\n\r\nglobalThis.Toast = createToast;\r\nglobalThis.Toastify = createToast;\r\n"],
  "mappings": "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",
  "names": ["isNull", "obj", "isUndefined", "isNullOrUndefined", "activeToasts", "toastTimeouts", "toastIntervals", "toastContainers", "debounce", "fn", "delay", "immediate", "timer", "debounced", "args", "callNow", "getContainer", "gravity", "position", "containerId", "container", "addTimeout", "toast", "callback", "delTimeout", "startTime", "duration", "updateRemainingTime", "elapsed", "remaining", "intervalId", "timeoutId", "offscreenContainer", "Toast", "options", "cls", "height", "width", "element", "styles", "camelToKebab", "str", "key", "value", "property", "important", "cleanValue", "animation", "reason", "e", "createToast"]
}
